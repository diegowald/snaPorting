'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
'
Namespace RendicionWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RendicionSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Rendicion
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private EnviarRendicionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CatalogoLibraryVB.My.MySettings.Default.CatalogoLibraryVB_RendicionWS_Rendicion
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event EnviarRendicionCompleted As EnviarRendicionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarRendicion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarRendicion(ByVal MacAddress As String, ByVal NroRendicion As String, ByVal IdViajante As String, ByVal F_Rendicion As String, ByVal Observaciones As String, ByVal Efectivo As String, ByVal Dolares As String, ByVal Euros As String, ByVal ChequesCant As String, ByVal ChequesMonto As String, ByVal CertificadosCant As String, ByVal CertificadosMonto As String, ByVal DetalleValores As String, ByVal DetalleRecibos As String) As Long
            Dim results() As Object = Me.Invoke("EnviarRendicion", New Object() {MacAddress, NroRendicion, IdViajante, F_Rendicion, Observaciones, Efectivo, Dolares, Euros, ChequesCant, ChequesMonto, CertificadosCant, CertificadosMonto, DetalleValores, DetalleRecibos})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarRendicionAsync(ByVal MacAddress As String, ByVal NroRendicion As String, ByVal IdViajante As String, ByVal F_Rendicion As String, ByVal Observaciones As String, ByVal Efectivo As String, ByVal Dolares As String, ByVal Euros As String, ByVal ChequesCant As String, ByVal ChequesMonto As String, ByVal CertificadosCant As String, ByVal CertificadosMonto As String, ByVal DetalleValores As String, ByVal DetalleRecibos As String)
            Me.EnviarRendicionAsync(MacAddress, NroRendicion, IdViajante, F_Rendicion, Observaciones, Efectivo, Dolares, Euros, ChequesCant, ChequesMonto, CertificadosCant, CertificadosMonto, DetalleValores, DetalleRecibos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarRendicionAsync(ByVal MacAddress As String, ByVal NroRendicion As String, ByVal IdViajante As String, ByVal F_Rendicion As String, ByVal Observaciones As String, ByVal Efectivo As String, ByVal Dolares As String, ByVal Euros As String, ByVal ChequesCant As String, ByVal ChequesMonto As String, ByVal CertificadosCant As String, ByVal CertificadosMonto As String, ByVal DetalleValores As String, ByVal DetalleRecibos As String, ByVal userState As Object)
            If (Me.EnviarRendicionOperationCompleted Is Nothing) Then
                Me.EnviarRendicionOperationCompleted = AddressOf Me.OnEnviarRendicionOperationCompleted
            End If
            Me.InvokeAsync("EnviarRendicion", New Object() {MacAddress, NroRendicion, IdViajante, F_Rendicion, Observaciones, Efectivo, Dolares, Euros, ChequesCant, ChequesMonto, CertificadosCant, CertificadosMonto, DetalleValores, DetalleRecibos}, Me.EnviarRendicionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarRendicionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarRendicionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarRendicionCompleted(Me, New EnviarRendicionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub EnviarRendicionCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarRendicionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarRendicionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
End Namespace

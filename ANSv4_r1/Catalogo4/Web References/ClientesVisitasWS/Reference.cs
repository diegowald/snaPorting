//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Catalogo.ClientesVisitasWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientesVisitasSoap", Namespace="http://tempuri.org/")]
    public partial class ClientesVisitas : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EnviarDatosOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientesVisitas() {
            this.Url = global::Catalogo.Properties.Settings.Default.Catalogo_ClientesVisitasWS_ClientesVisitas;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EnviarDatosCompletedEventHandler EnviarDatosCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarDatos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long EnviarDatos(
                    string MacAddress, 
                    string pNroVisita, 
                    string pIdCliente, 
                    string pFecha, 
                    string pQRecibe, 
                    string pCCompras, 
                    string pCPagos, 
                    string pRamoLiviano, 
                    string pRamoPesado, 
                    string pRamoAgricola, 
                    string pEsMononarca, 
                    string pMarca, 
                    string pCatRepGral, 
                    string pCatLubricentro, 
                    string pCatEstServicio, 
                    string pCatMotos, 
                    string pCatEspecialista, 
                    string pEspMotor, 
                    string pEspFrenos, 
                    string pEspSuspension, 
                    string pEspElectricidad, 
                    string pEspAccesorios, 
                    string pDetalle1, 
                    string pDetalle2, 
                    string pIdViajante, 
                    string pRazonSocial, 
                    string pCuit, 
                    string pEmail, 
                    string pDomicilio, 
                    string pCiudad, 
                    string pTelefono) {
            object[] results = this.Invoke("EnviarDatos", new object[] {
                        MacAddress,
                        pNroVisita,
                        pIdCliente,
                        pFecha,
                        pQRecibe,
                        pCCompras,
                        pCPagos,
                        pRamoLiviano,
                        pRamoPesado,
                        pRamoAgricola,
                        pEsMononarca,
                        pMarca,
                        pCatRepGral,
                        pCatLubricentro,
                        pCatEstServicio,
                        pCatMotos,
                        pCatEspecialista,
                        pEspMotor,
                        pEspFrenos,
                        pEspSuspension,
                        pEspElectricidad,
                        pEspAccesorios,
                        pDetalle1,
                        pDetalle2,
                        pIdViajante,
                        pRazonSocial,
                        pCuit,
                        pEmail,
                        pDomicilio,
                        pCiudad,
                        pTelefono});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarDatosAsync(
                    string MacAddress, 
                    string pNroVisita, 
                    string pIdCliente, 
                    string pFecha, 
                    string pQRecibe, 
                    string pCCompras, 
                    string pCPagos, 
                    string pRamoLiviano, 
                    string pRamoPesado, 
                    string pRamoAgricola, 
                    string pEsMononarca, 
                    string pMarca, 
                    string pCatRepGral, 
                    string pCatLubricentro, 
                    string pCatEstServicio, 
                    string pCatMotos, 
                    string pCatEspecialista, 
                    string pEspMotor, 
                    string pEspFrenos, 
                    string pEspSuspension, 
                    string pEspElectricidad, 
                    string pEspAccesorios, 
                    string pDetalle1, 
                    string pDetalle2, 
                    string pIdViajante, 
                    string pRazonSocial, 
                    string pCuit, 
                    string pEmail, 
                    string pDomicilio, 
                    string pCiudad, 
                    string pTelefono) {
            this.EnviarDatosAsync(MacAddress, pNroVisita, pIdCliente, pFecha, pQRecibe, pCCompras, pCPagos, pRamoLiviano, pRamoPesado, pRamoAgricola, pEsMononarca, pMarca, pCatRepGral, pCatLubricentro, pCatEstServicio, pCatMotos, pCatEspecialista, pEspMotor, pEspFrenos, pEspSuspension, pEspElectricidad, pEspAccesorios, pDetalle1, pDetalle2, pIdViajante, pRazonSocial, pCuit, pEmail, pDomicilio, pCiudad, pTelefono, null);
        }
        
        /// <remarks/>
        public void EnviarDatosAsync(
                    string MacAddress, 
                    string pNroVisita, 
                    string pIdCliente, 
                    string pFecha, 
                    string pQRecibe, 
                    string pCCompras, 
                    string pCPagos, 
                    string pRamoLiviano, 
                    string pRamoPesado, 
                    string pRamoAgricola, 
                    string pEsMononarca, 
                    string pMarca, 
                    string pCatRepGral, 
                    string pCatLubricentro, 
                    string pCatEstServicio, 
                    string pCatMotos, 
                    string pCatEspecialista, 
                    string pEspMotor, 
                    string pEspFrenos, 
                    string pEspSuspension, 
                    string pEspElectricidad, 
                    string pEspAccesorios, 
                    string pDetalle1, 
                    string pDetalle2, 
                    string pIdViajante, 
                    string pRazonSocial, 
                    string pCuit, 
                    string pEmail, 
                    string pDomicilio, 
                    string pCiudad, 
                    string pTelefono, 
                    object userState) {
            if ((this.EnviarDatosOperationCompleted == null)) {
                this.EnviarDatosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarDatosOperationCompleted);
            }
            this.InvokeAsync("EnviarDatos", new object[] {
                        MacAddress,
                        pNroVisita,
                        pIdCliente,
                        pFecha,
                        pQRecibe,
                        pCCompras,
                        pCPagos,
                        pRamoLiviano,
                        pRamoPesado,
                        pRamoAgricola,
                        pEsMononarca,
                        pMarca,
                        pCatRepGral,
                        pCatLubricentro,
                        pCatEstServicio,
                        pCatMotos,
                        pCatEspecialista,
                        pEspMotor,
                        pEspFrenos,
                        pEspSuspension,
                        pEspElectricidad,
                        pEspAccesorios,
                        pDetalle1,
                        pDetalle2,
                        pIdViajante,
                        pRazonSocial,
                        pCuit,
                        pEmail,
                        pDomicilio,
                        pCiudad,
                        pTelefono}, this.EnviarDatosOperationCompleted, userState);
        }
        
        private void OnEnviarDatosOperationCompleted(object arg) {
            if ((this.EnviarDatosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarDatosCompleted(this, new EnviarDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnviarDatosCompletedEventHandler(object sender, EnviarDatosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarDatosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarDatosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591